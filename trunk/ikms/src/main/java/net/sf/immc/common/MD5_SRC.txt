MD5的全称是Message-digest Algorithm 5（信息-摘要算法），用于确保信息传输完整一致。
90年代初由MIT的计算机科学实验室和RSA Data Security Inc的Ronald L. Rivest开发出来，经MD2、MD3和MD4发展而来。

md5算法定义在RFC 1321中，由Ron Rivest（RSA公司）在1992年提出


MD5算法的计算步骤：

1.通过添加一个1和若干个0的方式，把输入数据长度（按照字节算）变成64m+56
2.添加8个字节到输入数据中去，这样输入数据长度变成了64的倍数
3.把数据划分成块，每块64个字节
4.初始情况下，输出为：                                                                   
  m_state[0] = 0x67452301L;
  m_state[1] = 0xefcdab89L;
  m_state[2] = 0x98badcfeL;
  m_state[3] = 0x10325476L;
5.分别对每块进行计算。输出最后结果。

 

MD5的算法在RFC1321中实际上已经提供了C的实现，需要注意的是，很多早期的C编译器的int类型是16 bit的，MD5使用了unsigned long int，
并认为它是32bit的无符号整数。而在Java中int是32 bit的，long是64 bit的。在MD5的C实现中，使用了大量的位操作。这里需要指出的一点是，
尽管Java提供了位操作，由于Java没有unsigned类型，对于右移位操作多提供了一个无符号右移：>>>，等价于C中的 >> 对于unsigned 数的处理。 

参考：http://wuhongyu.javaeye.com/blog/435455